#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/nix/.nix" ]; then
	NIXD_DEFAULT_DATADIR="/var/lib/nix/.nix"
else
	NIXD_DEFAULT_DATADIR="/var/lib/nixd"
fi

NIXD_CONFIGFILE=${NIXD_CONFIGFILE:-/etc/nix/nix.conf}
NIXD_PIDDIR=${NIXD_PIDDIR:-/var/run/nixd}
NIXD_PIDFILE=${NIXD_PIDFILE:-${NIXD_PIDDIR}/nixd.pid}
NIXD_DATADIR=${NIXD_DATADIR:-${NIXD_DEFAULT_DATADIR}}
NIXD_USER=${NIXD_USER:-${NIX_USER:-nix}}
NIXD_GROUP=${NIXD_GROUP:-nix}
NIXD_BIN=${NIXD_BIN:-/usr/bin/nixd}
NIXD_NICE=${NIXD_NICE:-${NICELEVEL:-0}}
NIXD_OPTS="${NIXD_OPTS:-${NIX_OPTS}}"

name="NIX Core Daemon"
description="NIX cryptocurrency P2P network daemon"

command="/usr/bin/nixd"
command_args="-pid=\"${NIXD_PIDFILE}\" \
		-conf=\"${NIXD_CONFIGFILE}\" \
		-datadir=\"${NIXD_DATADIR}\" \
		-daemon \
		${NIXD_OPTS}"

required_files="${NIXD_CONFIGFILE}"
start_stop_daemon_args="-u ${NIXD_USER} \
			-N ${NIXD_NICE} -w 2000"
pidfile="${NIXD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${NIXD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${NIXD_USER}:${NIXD_GROUP}" \
	"${NIXD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${NIXD_USER}:${NIXD_GROUP}" \
	"${NIXD_PIDDIR}"

	checkpath -f \
	-o ${NIXD_USER}:${NIXD_GROUP} \
	-m 0660 \
	${NIXD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${NIXD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run nixd."
		eerror "The setting must appear in ${NIXD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"NIX Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
